# 난수를 이용하여 1부터 100 사이의 숫자를 사용하는 뺄셈 문제를 생성, 사용자에게 물어보고
# 정답인지 아닌지 검사 ** 이거는 주의 깊게 보면 좋을것 같음 (ex:  뺄셈 -> 곱셈 -> 덧셈 등등....)

import random
# random 라이브러리를 가져온다.
#   - 난수를 생성하는 기능을 제공한다.

x = random.randint(1, 100)
# 변수 x의 값을 1부터 100 사이의 임의의 정수로 저장한다.
#   - randint(a,b) 함수는 a부터 b까지의 값들 중에 실행할 때마다 매번 다른 무작위의 값을 낸다.
 
y = random.randint(1, 100)

ans = int(input(f"{x}-{y}="))
# 변수 ans에 난수로 생성한 뺄셈 문제의 정답을 사용자에게 입력받는다.
#   - input()은 괄호 안에 있는 값을 화면(콘솔)에 출력하고 키보드 입력을 기다린다.
#   - f"문자열 {변수}" 형식은 문자열 안에 변수의 값을 직접 삽입할 수 있다.
#   - 변수 x와 변수 y 값은 실행할 때 마다 1부터 100 사이의 무작위 값을 가지므로 매번 다른 뺄셈 문제가 생성된다.


# ================================ [조건문 구조 설명] =============================================
#   if      첫 번째 조건 검사
#   elif    앞의 조건이 거짓(False)일 때 다음 조건 검사
#   else    위의 모든 조건이 거짓(Flase)일 때 실행
#   각 블록의 끝은 콜론(:)이 붙으며, 다음 줄은 반드시 들여쓰기가 되어있어야 한다.(들여쓰기로 블록을 구분)
# ================================================================================================

if ans == x-y :
# 조건 : 변수 ans의 값이 x - y의 값과 같다면
#   - 연산자 '=='은 두 값이 서로 같은지 비교한다. 같으면 True 틀리면 False를 반환한다.
    print("맞았습니다.")
    # print 함수로 ()안에 있는 값을 화면(콘솔)에 출력한다.
else :
# 위에 있는 모든 조건이 거짓(False)일 때 검사.
#   - 의미상으로 입력받은 변수 ans의 값이 x - y와 달랐을 때를 의미한다.
#   - else는 조건식이 없고, 모든 조건이 거짓(False)일 때 자동으로 실행된다.
    print("틀렸습니다.")