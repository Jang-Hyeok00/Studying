# 터틀 그래픽에서 t.circle(100)이라고 입력하고 실행하면 화면에 반지름이 100원인 원이 그려진다.
# 이들 명령어를 조합하여 화면에 오륜기를 그리는 프로그램을 작성해보자.

import turtle
# turtle 라이브러리를 가져온다.
#   - python turtle graphics라는 창이 나옴.

t = turtle.Turtle()
# 변수 t를 Turtle 함수로 정의한다.
#   - 변수 t가 화면 안에 화살표 모양으로 나온다.

t.shape("turtle")
# 변수 t의 모양을 "turtle"(거북이)모양으로 만든다.
#   -이때 화살표 모양이었던 t가 거북이 모양으로 바뀜.

t.up()              
# t를 위로 올린다(penup).
#   - 이 코드를 시행하지 않는다면 내가 원하는 위치로 갈때(goto) 선이 그어진다(pendown 상태).

t.goto(-180,0)
# t의 위치를 이동시켜라.
#   - t.goto(x,y)는 t의 위치를 이동시킨다. 첫 번째는 x좌표 두 번째는 y좌표를 의미한다.

t.down()            
# t를 아래로 내린다(pendown).
#   - 이 코드로 펜을 내려서 움직이면 그대로 선이 그어진다.

t.circle(100)       
# t로 반지름이 100인 원모양으로 움직여라.
#   - 이때 펜이 내려져 있으므로 원이 그려진다.

t.up()
t.goto(0,0)         # t의 위치(좌표 0, 0)로 이동해라.
t.down()
t.circle(100)


t.up()
t.goto(180,0)       # t의 위치(좌표 180, 0)로 이동해라.
t.down()
t.circle(100)


t.up()
t.goto(-90,-100)    # t의 위치(좌표 -90, -100)로 이동해라.
t.down()
t.circle(100)


t.up()
t.goto(90,-100)     # t의 위치(좌표 90, -100)로 이동해라.
t.down()
t.circle(100)

turtle.done()       #사용자가 창을 닫을 때까지 프로그램이 종료되지 않고 대기하는 함수.

